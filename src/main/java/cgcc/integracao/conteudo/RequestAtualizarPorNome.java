/*
 * API de Integração com GCC - Conteúdo
 * Provê funcionalidades para criação, recuperação e atualização de conteúdo no repositório GCC
 *
 * OpenAPI spec version: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package cgcc.integracao.conteudo;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import cgcc.integracao.conteudo.Metadado;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Contempla as informações a serem enviadas na requisição para atualização de classe/metadados de conteúdo, através de seu ID.Para atualizar apenas os metadados do conteúdo, classeDocumento deve ser enviada como null. Nesse caso, os atributos nomeMetadadoTipoConteudo, tipoConteudo, nomeMetadadoStatusConteudo e tipoAtualizacao serão irrelevantes. Para atualizar a classe e metadados (se necessário), em classeDocumento deve ser enviado o nome da classe para qual o conteúdo será alterado. Nesse caso, os atributos nomeMetadadoTipoConteudo, tipoConteudo, nomeMetadadoStatusConteudo e tipoAtualizacao devem ser preenchidos. O atributos tipoAtualizacao deve ser enviado como ATUALIZACAO. Para declarar o conteúdo como recusado, em classeDocumento deve ser enviado o nome da classe de recusa. Nesse caso, os atributos nomeMetadadoTipoConteudo e tipoConteudo são irrelevantes, porém nomeMetadadoStatusConteudo e tipoAtualizacao devem ser preenchidos. O atributos tipoAtualizacao deve ser enviado como RECUSA. Para declarar o conteúdo como fraude, em classeDocumento deve ser enviado o nome da classe de fraude. Nesse caso, os atributos nomeMetadadoTipoConteudo e tipoConteudo são irrelevantes, porém nomeMetadadoStatusConteudo e tipoAtualizacao devem ser preenchidos. O atributos tipoAtualizacao deve ser enviado como FRAUDE.
 */
@ApiModel(description = "Contempla as informações a serem enviadas na requisição para atualização de classe/metadados de conteúdo, através de seu ID.Para atualizar apenas os metadados do conteúdo, classeDocumento deve ser enviada como null. Nesse caso, os atributos nomeMetadadoTipoConteudo, tipoConteudo, nomeMetadadoStatusConteudo e tipoAtualizacao serão irrelevantes. Para atualizar a classe e metadados (se necessário), em classeDocumento deve ser enviado o nome da classe para qual o conteúdo será alterado. Nesse caso, os atributos nomeMetadadoTipoConteudo, tipoConteudo, nomeMetadadoStatusConteudo e tipoAtualizacao devem ser preenchidos. O atributos tipoAtualizacao deve ser enviado como ATUALIZACAO. Para declarar o conteúdo como recusado, em classeDocumento deve ser enviado o nome da classe de recusa. Nesse caso, os atributos nomeMetadadoTipoConteudo e tipoConteudo são irrelevantes, porém nomeMetadadoStatusConteudo e tipoAtualizacao devem ser preenchidos. O atributos tipoAtualizacao deve ser enviado como RECUSA. Para declarar o conteúdo como fraude, em classeDocumento deve ser enviado o nome da classe de fraude. Nesse caso, os atributos nomeMetadadoTipoConteudo e tipoConteudo são irrelevantes, porém nomeMetadadoStatusConteudo e tipoAtualizacao devem ser preenchidos. O atributos tipoAtualizacao deve ser enviado como FRAUDE.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-02T20:33:16.213Z")
public class RequestAtualizarPorNome {
  @SerializedName("centroCusto")
  private String centroCusto = null;

  @SerializedName("canal")
  private String canal = null;

  @SerializedName("usuario")
  private String usuario = null;

  @SerializedName("senha")
  private String senha = null;

  @SerializedName("objectStore")
  private String objectStore = null;

  @SerializedName("nome")
  private String nome = null;

  @SerializedName("classeDocumento")
  private String classeDocumento = null;

  @SerializedName("nomeMetadadoTipoConteudo")
  private String nomeMetadadoTipoConteudo = null;

  @SerializedName("tipoConteudo")
  private Integer tipoConteudo = null;

  @SerializedName("nomeMetadadoStatusConteudo")
  private String nomeMetadadoStatusConteudo = null;

  /**
   * Tipo de atualizacao que esta sendo realizada
   */
  @JsonAdapter(TipoAtualizacaoEnum.Adapter.class)
  public enum TipoAtualizacaoEnum {
    ATUALIZACAO("ATUALIZACAO"),
    
    FRAUDE("FRAUDE"),
    
    RECUSA("RECUSA");

    private String value;

    TipoAtualizacaoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TipoAtualizacaoEnum fromValue(String text) {
      for (TipoAtualizacaoEnum b : TipoAtualizacaoEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TipoAtualizacaoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TipoAtualizacaoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TipoAtualizacaoEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TipoAtualizacaoEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("tipoAtualizacao")
  private TipoAtualizacaoEnum tipoAtualizacao = null;

  @SerializedName("metadados")
  private List<Metadado> metadados = new ArrayList<Metadado>();

  public RequestAtualizarPorNome centroCusto(String centroCusto) {
    this.centroCusto = centroCusto;
    return this;
  }

   /**
   * Centro de custo que esta executando a requisição
   * @return centroCusto
  **/
  @ApiModelProperty(required = true, value = "Centro de custo que esta executando a requisição")
  public String getCentroCusto() {
    return centroCusto;
  }

  public void setCentroCusto(String centroCusto) {
    this.centroCusto = centroCusto;
  }

  public RequestAtualizarPorNome canal(String canal) {
    this.canal = canal;
    return this;
  }

   /**
   * Canal que está executando a requisição
   * @return canal
  **/
  @ApiModelProperty(required = true, value = "Canal que está executando a requisição")
  public String getCanal() {
    return canal;
  }

  public void setCanal(String canal) {
    this.canal = canal;
  }

  public RequestAtualizarPorNome usuario(String usuario) {
    this.usuario = usuario;
    return this;
  }

   /**
   * Usuário para autenticação no repositório GCC (o usuário deve estar criptografado no padrão GCC)
   * @return usuario
  **/
  @ApiModelProperty(required = true, value = "Usuário para autenticação no repositório GCC (o usuário deve estar criptografado no padrão GCC)")
  public String getUsuario() {
    return usuario;
  }

  public void setUsuario(String usuario) {
    this.usuario = usuario;
  }

  public RequestAtualizarPorNome senha(String senha) {
    this.senha = senha;
    return this;
  }

   /**
   * Senha para autenticação no repositório GCC (a senha deve estar criptografada no padrão GCC)
   * @return senha
  **/
  @ApiModelProperty(required = true, value = "Senha para autenticação no repositório GCC (a senha deve estar criptografada no padrão GCC)")
  public String getSenha() {
    return senha;
  }

  public void setSenha(String senha) {
    this.senha = senha;
  }

  public RequestAtualizarPorNome objectStore(String objectStore) {
    this.objectStore = objectStore;
    return this;
  }

   /**
   * ObjectStore onde será executada a operação no repositório
   * @return objectStore
  **/
  @ApiModelProperty(example = "OS-CAMBIO", required = true, value = "ObjectStore onde será executada a operação no repositório")
  public String getObjectStore() {
    return objectStore;
  }

  public void setObjectStore(String objectStore) {
    this.objectStore = objectStore;
  }

  public RequestAtualizarPorNome nome(String nome) {
    this.nome = nome;
    return this;
  }

   /**
   * Nome/titulo do conteúdo a ser atualizado
   * @return nome
  **/
  @ApiModelProperty(example = "F123456987852401382-000-E160.jpg", required = true, value = "Nome/titulo do conteúdo a ser atualizado")
  public String getNome() {
    return nome;
  }

  public void setNome(String nome) {
    this.nome = nome;
  }

  public RequestAtualizarPorNome classeDocumento(String classeDocumento) {
    this.classeDocumento = classeDocumento;
    return this;
  }

   /**
   * Classe para qual o conteúdo será atualizado. Caso não seja necessário atualizar a classe, enviar como null
   * @return classeDocumento
  **/
  @ApiModelProperty(example = "docGccPessoaFisicaRG", required = true, value = "Classe para qual o conteúdo será atualizado. Caso não seja necessário atualizar a classe, enviar como null")
  public String getClasseDocumento() {
    return classeDocumento;
  }

  public void setClasseDocumento(String classeDocumento) {
    this.classeDocumento = classeDocumento;
  }

  public RequestAtualizarPorNome nomeMetadadoTipoConteudo(String nomeMetadadoTipoConteudo) {
    this.nomeMetadadoTipoConteudo = nomeMetadadoTipoConteudo;
    return this;
  }

   /**
   * Nome do metadado que armazena o tipo do conteúdo (icor). Apenas deve ser enviado em caso de atualização de classe (igorar para fraude e recusa)
   * @return nomeMetadadoTipoConteudo
  **/
  @ApiModelProperty(example = "GccCdTipoDocIcor", required = true, value = "Nome do metadado que armazena o tipo do conteúdo (icor). Apenas deve ser enviado em caso de atualização de classe (igorar para fraude e recusa)")
  public String getNomeMetadadoTipoConteudo() {
    return nomeMetadadoTipoConteudo;
  }

  public void setNomeMetadadoTipoConteudo(String nomeMetadadoTipoConteudo) {
    this.nomeMetadadoTipoConteudo = nomeMetadadoTipoConteudo;
  }

  public RequestAtualizarPorNome tipoConteudo(Integer tipoConteudo) {
    this.tipoConteudo = tipoConteudo;
    return this;
  }

   /**
   * Codigo do tipo do conteúdo (icor). Apenas deve ser enviado em caso de atualização de classe (igorar para fraude e recusa)
   * @return tipoConteudo
  **/
  @ApiModelProperty(example = "7", required = true, value = "Codigo do tipo do conteúdo (icor). Apenas deve ser enviado em caso de atualização de classe (igorar para fraude e recusa)")
  public Integer getTipoConteudo() {
    return tipoConteudo;
  }

  public void setTipoConteudo(Integer tipoConteudo) {
    this.tipoConteudo = tipoConteudo;
  }

  public RequestAtualizarPorNome nomeMetadadoStatusConteudo(String nomeMetadadoStatusConteudo) {
    this.nomeMetadadoStatusConteudo = nomeMetadadoStatusConteudo;
    return this;
  }

   /**
   * Nome do metadado que armazena o status do conteúdo. Apenas deve ser enviado em caso de atualização de classe
   * @return nomeMetadadoStatusConteudo
  **/
  @ApiModelProperty(example = "GccCdStatusDocumento", required = true, value = "Nome do metadado que armazena o status do conteúdo. Apenas deve ser enviado em caso de atualização de classe")
  public String getNomeMetadadoStatusConteudo() {
    return nomeMetadadoStatusConteudo;
  }

  public void setNomeMetadadoStatusConteudo(String nomeMetadadoStatusConteudo) {
    this.nomeMetadadoStatusConteudo = nomeMetadadoStatusConteudo;
  }

  public RequestAtualizarPorNome tipoAtualizacao(TipoAtualizacaoEnum tipoAtualizacao) {
    this.tipoAtualizacao = tipoAtualizacao;
    return this;
  }

   /**
   * Tipo de atualizacao que esta sendo realizada
   * @return tipoAtualizacao
  **/
  @ApiModelProperty(required = true, value = "Tipo de atualizacao que esta sendo realizada")
  public TipoAtualizacaoEnum getTipoAtualizacao() {
    return tipoAtualizacao;
  }

  public void setTipoAtualizacao(TipoAtualizacaoEnum tipoAtualizacao) {
    this.tipoAtualizacao = tipoAtualizacao;
  }

  public RequestAtualizarPorNome metadados(List<Metadado> metadados) {
    this.metadados = metadados;
    return this;
  }

  public RequestAtualizarPorNome addMetadadosItem(Metadado metadadosItem) {
    this.metadados.add(metadadosItem);
    return this;
  }

   /**
   * Lista de metadados a serem atualizados no conteúdo
   * @return metadados
  **/
  @ApiModelProperty(required = true, value = "Lista de metadados a serem atualizados no conteúdo")
  public List<Metadado> getMetadados() {
    return metadados;
  }

  public void setMetadados(List<Metadado> metadados) {
    this.metadados = metadados;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestAtualizarPorNome requestAtualizarPorNome = (RequestAtualizarPorNome) o;
    return Objects.equals(this.centroCusto, requestAtualizarPorNome.centroCusto) &&
        Objects.equals(this.canal, requestAtualizarPorNome.canal) &&
        Objects.equals(this.usuario, requestAtualizarPorNome.usuario) &&
        Objects.equals(this.senha, requestAtualizarPorNome.senha) &&
        Objects.equals(this.objectStore, requestAtualizarPorNome.objectStore) &&
        Objects.equals(this.nome, requestAtualizarPorNome.nome) &&
        Objects.equals(this.classeDocumento, requestAtualizarPorNome.classeDocumento) &&
        Objects.equals(this.nomeMetadadoTipoConteudo, requestAtualizarPorNome.nomeMetadadoTipoConteudo) &&
        Objects.equals(this.tipoConteudo, requestAtualizarPorNome.tipoConteudo) &&
        Objects.equals(this.nomeMetadadoStatusConteudo, requestAtualizarPorNome.nomeMetadadoStatusConteudo) &&
        Objects.equals(this.tipoAtualizacao, requestAtualizarPorNome.tipoAtualizacao) &&
        Objects.equals(this.metadados, requestAtualizarPorNome.metadados);
  }

  @Override
  public int hashCode() {
    return Objects.hash(centroCusto, canal, usuario, senha, objectStore, nome, classeDocumento, nomeMetadadoTipoConteudo, tipoConteudo, nomeMetadadoStatusConteudo, tipoAtualizacao, metadados);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestAtualizarPorNome {\n");
    
    sb.append("    centroCusto: ").append(toIndentedString(centroCusto)).append("\n");
    sb.append("    canal: ").append(toIndentedString(canal)).append("\n");
    sb.append("    usuario: ").append(toIndentedString(usuario)).append("\n");
    sb.append("    senha: ").append(toIndentedString(senha)).append("\n");
    sb.append("    objectStore: ").append(toIndentedString(objectStore)).append("\n");
    sb.append("    nome: ").append(toIndentedString(nome)).append("\n");
    sb.append("    classeDocumento: ").append(toIndentedString(classeDocumento)).append("\n");
    sb.append("    nomeMetadadoTipoConteudo: ").append(toIndentedString(nomeMetadadoTipoConteudo)).append("\n");
    sb.append("    tipoConteudo: ").append(toIndentedString(tipoConteudo)).append("\n");
    sb.append("    nomeMetadadoStatusConteudo: ").append(toIndentedString(nomeMetadadoStatusConteudo)).append("\n");
    sb.append("    tipoAtualizacao: ").append(toIndentedString(tipoAtualizacao)).append("\n");
    sb.append("    metadados: ").append(toIndentedString(metadados)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

